@page "/books"
@using System.Net.Http
@using Data
@using WEB_API.Entities

<h3>Books</h3>
@if (books == null)
{
    <h1>Loading...</h1>

}
else if (books.Count == 0)
{
    <h5>There are no books</h5>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <td>Title</td>

                <td>Author</td>
                <td>Description</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in books)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>@item.Author</td>
                    <td>@item.Description</td>
                    <button class="oi oi-delete btn btn-danger" @onclick="(() => DeleteBook(item.Id))"></button>
                    <button class="oi oi-pencil btn btn-primary" @onclick="(() => EditBook(item.Id))"></button>
                </tr>
            }
        </tbody>
    </table>
}
<div class="mt-4">
    <h4>Add a book </h4>
    <EditForm Model="@newBook" OnValidSubmit="@HandleAddSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <FieldComponent Label="Title">
            <Control>
                <InputText id="title" class="form-control" @bind-Value="newBook.Title" />
            </Control>
        </FieldComponent>
        <FieldComponent Label="Description">
            <Control>
                <InputText id="description" class="form-control" @bind-Value="newBook.Description" />
            </Control>
        </FieldComponent>
        <FieldComponent Label="Title">
            <Control>
                <InputText id="author" class="form-control" @bind-Value="newBook.Author" />
            </Control>
        </FieldComponent>
        <button type="submit" class="btn btn-success">Submit</button>
    </EditForm>
</div>

@if (isEdit)
{
    <div class="mt-5">
        <h4>Edit a book </h4>
        <EditForm Model="@editBook" OnValidSubmit="@HandleEditSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <FieldComponent Label="Title">
                <Control>
                    <InputText id="title" class="form-control" @bind-Value="editBook.Title" />
                </Control>
            </FieldComponent>
            <FieldComponent Label="Description">
                <Control>
                    <InputText id="description" class="form-control" @bind-Value="editBook.Description" />
                </Control>
            </FieldComponent>
            <FieldComponent Label="Title">
                <Control>
                    <InputText id="author" class="form-control" @bind-Value="editBook.Author" />
                </Control>
            </FieldComponent>
            <button type="submit" class="btn btn-primary">Save</button>
        </EditForm>
    </div>
}

@code {
    private List<Book> books;
    private Book newBook = new Book();
    public bool isEdit = false;
    private Book editBook = new Book();

    [Inject]
    public IBookService BookService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        books = await BookService.GetBooks();
        //Console.WriteLine(books);
    }

    private async void HandleAddSubmit()
    {
        await BookService.CreateBook(newBook);
        books = await BookService.GetBooks();
        StateHasChanged();
    }

    private async void DeleteBook(int id)
    {
        await BookService.DeleteBook(id);
        books = await BookService.GetBooks();
        StateHasChanged();
    }

    private async void EditBook(int id)
    {
        isEdit = true;
        editBook = await BookService.GetBookById(id);

        StateHasChanged();
    }

    private async void HandleEditSubmit()
    {
        await BookService.UpdateBook(editBook);
        isEdit = false;
        books = await BookService.GetBooks();
        StateHasChanged();
    }
}
